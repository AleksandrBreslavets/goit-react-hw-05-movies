{"version":3,"file":"static/js/754.ec9ed01d.chunk.js","mappings":"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","sources":["helpers/api.js","components/MovieInfoBlock/MovieInfoBlock.styled.js","components/MovieInfoBlock/MovieInfoBlock.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers = {\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZWY1MTFhNDkyM2NiMzYzZWE1MGQxYmY2NDRkOWQ4MSIsInN1YiI6IjY0OTJjZDUxNDNjZDU0MDBjODFhZjQ3MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.3ZoWbX-qb3V6pyGWC-GdfRKa5qk6kiHeWeSt9uswZNE',\n    accept: 'application/json'\n};\n \nexport const getTrendingFilms = async () => {\n    const response = await axios.get('trending/movie/day?language=en-US');\n    return response.data.results;\n};\n\nexport const getFilmsByQuery = async query => {\n    const response = await axios.get('search/movie', {\n        params: {\n            query,\n            include_adult: false,\n            language: 'en-US',\n            page: 1,\n        }\n    });\n    return response.data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n    const response = await axios.get(`movie/${movieId}?language=en-US`);\n    return response.data;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?language=en-US&page=1`);\n    return response.data.results;\n};\n\nexport const getCast=async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?language=en-US`);\n    return response.data.cast;\n};","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n    margin-top: 30px;\n    display: flex;\n`;\nexport const FilmInfo = styled.div`\n    margin-left:30px;\n`;\n\nexport const LinksList = styled.ul`\n    display: flex;\n    align-items: center;\n    margin: 40px 0;\n`;\n\nexport const LinksListEl = styled.li`\n    &:not(:last-child){\n        margin-right: 30px;\n    }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n    text-decoration: none;\n    color:black;\n    font-size: 20px;\n    font-weight: 600;\n    border: 1px solid red;\n    border-radius: 20px;\n    padding: 10px 23px;\n    &:hover,&:active,&:focus{\n        color:red;\n    }\n`;","import { FilmInfo, LinksList, LinksListEl, StyledNavLink, Wrapper } from \"./MovieInfoBlock.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const MovieInfoBlock = ({ info }) => {\n    const { poster_path, title, overview, genres, release_date, vote_average } = info;\n    const date = release_date.slice(0, release_date.indexOf('-'));\n    const score = `${vote_average.toFixed(1) * 10}%`;\n    const DEFAULT_FILM_POSTER = \"https://media.comicbook.com/files/img/default-movie.png\";\n\n    return (\n        <article>\n            <Wrapper>\n                <img src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : DEFAULT_FILM_POSTER} width={200} alt={`${title} poster`} />\n                <FilmInfo>\n                    <h2 style={{ marginBottom: \"7px\" }}>{title} ({date})</h2>\n                    <p>User Score: {score}</p>\n                    <h3>Overview</h3>\n                    <p>{overview}</p>\n                    <h3>Genres</h3>\n                    <ul style={{ listStyle: \"inside disc\" }}>\n                        {genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n                    </ul>\n                </FilmInfo>\n            </Wrapper>\n            <h4>Additional information</h4>\n            <LinksList>\n                <LinksListEl><StyledNavLink to=\"cast\">Cast</StyledNavLink></LinksListEl>\n                <li><StyledNavLink to=\"reviews\">Reviews</StyledNavLink></li>\n            </LinksList>\n        </article>\n    )\n};\n\nMovieInfoBlock.propTypes = {\n    info: PropTypes.shape({\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        overview: PropTypes.string,\n        genres: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.number,\n            name: PropTypes.string,\n        }),),\n        release_date: PropTypes.string,\n        vote_average: PropTypes.number,\n    }).isRequired,\n};","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledNavLink = styled(NavLink)`\n    text-decoration: none;\n    color:black;\n    font-size: 18px;\n    &:hover,&:active,&:focus{\n        color:red;\n    }\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { MovieInfoBlock } from \"components/MovieInfoBlock/MovieInfoBlock\";\nimport { getMovieInfo } from \"helpers/api\";\nimport { Suspense, useEffect, useRef, useState } from \"react\";\nimport { useParams, Outlet, useLocation, Navigate, } from \"react-router-dom\"\nimport { StyledNavLink } from \"./MovieDetails.styled\";\n\nconst ERROR_MSG = \"Something went wrong with loading movie details. Try to reload the page!\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieInfo, setMovieInfo] = useState(null);\n    const [isLoading, setIsLoding] = useState(false);\n    const [isResponseOk, setIsResponseOk] = useState(true);\n    const location = useLocation();\n    const backLinkRef = useRef(location.state?.from ?? \"/\");\n\n    useEffect(() => {\n        async function getInfo() {\n            try {\n                setIsLoding(true);\n                const info = await getMovieInfo(movieId);\n                setMovieInfo(info);\n                setIsResponseOk(true);\n            }\n            catch {\n                console.log(ERROR_MSG);\n                setIsResponseOk(false);\n            }\n            finally {\n                setIsLoding(false);\n            }\n        };\n        getInfo();\n    }, [movieId])\n\n    if (!isResponseOk) {\n        return <Navigate to=\"/\" replace />;\n    }\n\n    return (\n        <div>\n            <StyledNavLink to={backLinkRef.current}>‚áê Back to movies</StyledNavLink>\n            {movieInfo && <MovieInfoBlock info={movieInfo} />}\n\n            {isLoading && <Loader />}\n            <Suspense fallback={<Loader />}>\n                <Outlet />\n            </Suspense>\n            \n        </div>\n    );\n};\n\nexport default MovieDetails;"],"names":["axios","Authorization","accept","getTrendingFilms","response","data","results","getFilmsByQuery","query","params","include_adult","language","page","getMovieInfo","movieId","getReviews","getCast","cast","Wrapper","styled","FilmInfo","LinksList","LinksListEl","StyledNavLink","NavLink","MovieInfoBlock","info","poster_path","title","overview","genres","release_date","vote_average","date","slice","indexOf","score","toFixed","src","width","alt","style","marginBottom","listStyle","map","id","name","to","ERROR_MSG","useParams","useState","movieInfo","setMovieInfo","isLoading","setIsLoding","isResponseOk","setIsResponseOk","location","useLocation","backLinkRef","useRef","state","from","useEffect","console","log","getInfo","current","Loader","Suspense","fallback","replace"],"sourceRoot":""}